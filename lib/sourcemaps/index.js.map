{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;AACA,MAAY,CAAC,WAAM,QAAQ,CAAC,CAAA;AAC5B,mCAA2G,kBAAkB,CAAC,CAAA;AAI9H,MAAY,OAAO,WAAM,iBAAiB,CAAC,CAAA;AAE3C,kCAAiC,yBAAyB,CAAC,CAAA;AAG3D;IACI,UAAU,CAAC,IAAe,EAAE,MAAmB,EAAE,GAAe;QAE5D,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;YACtB,EAAE,EAAE;gBACA,MAAM,EAAE,CAAC,MAAmB,KAAK,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;aAC9E;SACJ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAGnB,MAAM,CAAc;YAChB,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,GAAG;YACR,MAAM,EAAE,MAAM;SACjB,CAAA;IACL,CAAC;IAED,SAAS,CAAC,MAAmB;QACzB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,kCAAgB,CAAC,CAAA;IAC7C,CAAC;AACL,CAAC;AArBD;IAAC,6BAAU;;UAAA;AACE,cAAM,SAoBlB,CAAA","file":"../index.js","sourcesContent":["/// <reference types=\"mocha\"/>\r\nimport * as _ from 'lodash';\r\nimport { ITask, findTasks, ITaskConfig, IEnvOption, Operation, ITaskOption, ITaskDefine, taskdefine } from 'development-core';\r\n\r\nexport * from './NodeTaskOption';\r\n\r\nimport * as asserts from './tasks/asserts';\r\n\r\nimport { NodeDynamicTasks } from './tasks/nodeDefaultTask';\r\n\r\n@taskdefine\r\nexport class Define implements ITaskDefine {\r\n    loadConfig(oper: Operation, option: ITaskOption, env: IEnvOption): ITaskConfig {\r\n        // register default asserts.\r\n        option.asserts = _.extend({\r\n            ts: {\r\n                loader: (config: ITaskConfig) => config.findTasks(asserts, { group: 'ts' })\r\n            }\r\n        }, option.asserts);\r\n\r\n\r\n        return <ITaskConfig>{\r\n            oper: oper,\r\n            env: env,\r\n            option: option\r\n        }\r\n    }\r\n\r\n    loadTasks(config: ITaskConfig): Promise<ITask[]> {\r\n        return config.findTasks(NodeDynamicTasks)\r\n    }\r\n}\r\n"]}