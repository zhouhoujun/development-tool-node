{"version":3,"sources":["index.ts"],"names":["_","require","development_core_1","nodeDefaultTask_1","NodeContextDefine","prototype","getContext","config","option","asserts","extend","ts","loader","bindingConfig","tasks","context","findTasks","NodeDynamicTasks","__decorate","taskdefine","exports"],"mappings":"uXACAA,EAAAC,QAAA,UACAC,mBAAAD,QAAA,oBAIAE,kBAAAF,QAAA,2BAGaG,kBAAiB,WAA9B,QAAAA,MAeA,MAbIA,GAAAC,UAAAC,WAAA,SAAWC,GAOP,MALAA,GAAOC,OAAOC,QAAUT,EAAEU,QACtBC,IAAMC,OAAQ,0BACfL,EAAOC,OAAOC,SAGVP,mBAAAW,cAAcN,IAGzBH,EAAAC,UAAAS,MAAA,SAAMC,GACF,MAAOA,GAAQC,UAAUb,kBAAAc,mBAEjCb,IAfaA,mBAAiBc,YAD7BhB,mBAAAiB,YACYf,mBAAAgB,QAAAhB,kBAAAA","file":"../index.js","sourcesContent":["/// <reference types=\"mocha\" />\r\nimport * as _ from 'lodash';\r\nimport { ITask, ITaskConfig, bindingConfig, IContextDefine, ITaskContext, taskdefine } from 'development-core';\r\n\r\nexport * from './NodeTaskOption';\r\n\r\nimport { NodeDynamicTasks } from './tasks/nodeDefaultTask';\r\n\r\n@taskdefine\r\nexport class NodeContextDefine implements IContextDefine {\r\n\r\n    getContext(config: ITaskConfig): ITaskContext {\r\n        // register default asserts.\r\n        config.option.asserts = _.extend({\r\n            ts: { loader: 'development-assert-ts' }\r\n        }, config.option.asserts);\r\n\r\n\r\n        return bindingConfig(config);\r\n    }\r\n\r\n    tasks(context: ITaskContext): Promise<ITask[]> {\r\n        return context.findTasks(NodeDynamicTasks)\r\n    }\r\n}\r\n"]}