{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;AAAA,+BAA+B;AAC/B,0BAA4B;AAC5B,qDAA+G;AAI/G,2DAA2D;AAG3D,IAAa,iBAAiB;IAA9B;IAeA,CAAC;IAbG,sCAAU,GAAV,UAAW,MAAmB;QAC1B,4BAA4B;QAC5B,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;YAC7B,EAAE,EAAE,EAAE,MAAM,EAAE,uBAAuB,EAAE;SAC1C,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAG1B,MAAM,CAAC,gCAAa,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,iCAAK,GAAL,UAAM,OAAqB;QACvB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,kCAAgB,CAAC,CAAA;IAC9C,CAAC;IACL,wBAAC;AAAD,CAfA,AAeC,IAAA;AAfY,iBAAiB;IAD7B,6BAAU;GACE,iBAAiB,CAe7B;AAfY,8CAAiB","file":"../index.js","sourcesContent":["/// <reference types=\"mocha\" />\r\nimport * as _ from 'lodash';\r\nimport { ITask, ITaskConfig, bindingConfig, IContextDefine, ITaskContext, taskdefine } from 'development-core';\r\n\r\nexport * from './NodeTaskOption';\r\n\r\nimport { NodeDynamicTasks } from './tasks/nodeDefaultTask';\r\n\r\n@taskdefine\r\nexport class NodeContextDefine implements IContextDefine {\r\n\r\n    getContext(config: ITaskConfig): ITaskContext {\r\n        // register default asserts.\r\n        config.option.asserts = _.extend({\r\n            ts: { loader: 'development-assert-ts' }\r\n        }, config.option.asserts);\r\n\r\n\r\n        return bindingConfig(config);\r\n    }\r\n\r\n    tasks(context: ITaskContext): Promise<ITask[]> {\r\n        return context.findTasks(NodeDynamicTasks)\r\n    }\r\n}\r\n"]}